% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/encodeCharColumns.R
\name{decodeCharColumns}
\alias{decodeCharColumns}
\title{Decode character columns.}
\usage{
decodeCharColumns(df, columnNames)
}
\arguments{
\item{df}{A dataframe}

\item{columnNames}{The columns which are to be decoded. If NULL,
'encodedColumnNames' attribute is checked. It is advised not to leave it
NULL.}
}
\value{
A dataframe
}
\description{
Decode a subset of character columns which were encoded using
  base64 encoding.
}
\details{
Texual data in dataframes with comman seperators like ',' create
  problems writing to disk and reading back. The function 'encodeCharCols'
  encodes the a subset of character columns using base64 encoding where the
  resulting dataframe might be written to disk with ',' separator. The
  function 'decodeCharCols' decodes the encoded character columns are
  restores back the actual character columns.
}
\examples{
iris2 <- iris
iris2$Species <- as.character(iris2$Species)
iris_enc <- encodeCharColumns(iris2)
iris_enc
unique(iris_enc$Species)
iris_dec <- decodeCharColumns(iris_enc, "Species")
iris_dec
all.equal(iris_dec, iris2)
}
